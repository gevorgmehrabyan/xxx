import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PDFStyles } from "./baseStyles";
import { Document, Page, Text, PDFViewer, View } from "@react-pdf/renderer";
import DefaultHeader from "./DefaultHeader";
import DefaultFooter from "./DefaultFooter";
var SentToLawyer = function (_a) {
    var data = _a.data, withPreview = _a.withPreview;
    var renderView = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
        return (_jsx(Document, { children: _jsxs(Page, { size: "A4", style: PDFStyles.page, children: [_jsxs(View, { children: [_jsx(DefaultHeader, {}), _jsxs(View, { style: PDFStyles.contentWrapper, children: [_jsx(View, { style: { marginTop: 16, display: "flex", alignItems: "center" }, children: _jsx(Text, { children: data === null || data === void 0 ? void 0 : data.currentDate }) }), _jsxs(View, { style: [PDFStyles.flexBetween, { marginTop: 16 }], children: [_jsxs(View, { children: [_jsx(Text, { children: (_a = data === null || data === void 0 ? void 0 : data.lawyer) === null || _a === void 0 ? void 0 : _a.name }), _jsx(Text, { children: (_b = data === null || data === void 0 ? void 0 : data.lawyer) === null || _b === void 0 ? void 0 : _b.address1 }), _jsx(Text, { children: (_c = data === null || data === void 0 ? void 0 : data.lawyer) === null || _c === void 0 ? void 0 : _c.address2 }), _jsxs(Text, { children: [(_d = data === null || data === void 0 ? void 0 : data.lawyer) === null || _d === void 0 ? void 0 : _d.city, ", ", (_e = data === null || data === void 0 ? void 0 : data.lawyer) === null || _e === void 0 ? void 0 : _e.state, (_f = data === null || data === void 0 ? void 0 : data.lawyer) === null || _f === void 0 ? void 0 : _f.zip] })] }), _jsxs(View, { children: [_jsxs(Text, { children: ["Re: ", ((_g = data === null || data === void 0 ? void 0 : data.lawyer) === null || _g === void 0 ? void 0 : _g.name) || "-"] }), _jsx(Text, { children: data === null || data === void 0 ? void 0 : data.irs }), _jsx(Text, { children: (data === null || data === void 0 ? void 0 : data.name) || "-" })] })] }), _jsx(View, { style: { marginTop: 24 }, children: _jsxs(Text, { children: [(_h = data === null || data === void 0 ? void 0 : data.lawyer) === null || _h === void 0 ? void 0 : _h.salutation, ":"] }) }), _jsxs(View, { style: { padding: 24 }, children: [_jsx(Text, { children: "We are enclosing copies of our files on the above reference. Please pursue the\n                      necessary collection on a ".concat(data === null || data === void 0 ? void 0 : data.billingBasis, " basis.") }), _jsx(View, { style: { padding: "24px 0" }, children: (_j = data === null || data === void 0 ? void 0 : data.selectedDetails) === null || _j === void 0 ? void 0 : _j.map(function (detail, index) { return (_jsx(Text, { children: detail }, index)); }) }), _jsxs(Text, { children: ["The total net loss on this case is ", data === null || data === void 0 ? void 0 : data.netAmount, "."] }), _jsx(Text, { children: "Please note other cases for the same importer have previously been sent to you." }), _jsxs(Text, { style: { margin: "8px 0" }, children: ["The total net loss on all cases is ", "", data === null || data === void 0 ? void 0 : data.allLossesCaseAmount, "."] }), _jsx(Text, { children: "Please advise accordingly." })] }), _jsx(View, { style: {
                                            marginTop: 24,
                                            display: "flex",
                                            width: "100%",
                                            alignItems: "flex-end",
                                            justifyContent: "center",
                                        }, children: _jsxs(View, { children: [_jsx(Text, { children: "Regards," }), _jsx(Text, { children: "C.A.Shea & Company, Inc." })] }) }), _jsxs(View, { style: [PDFStyles.flexBetween, { marginTop: 24 }], children: [_jsxs(View, { children: [_jsx(Text, { children: (_k = data === null || data === void 0 ? void 0 : data.selectedInitial) === null || _k === void 0 ? void 0 : _k.initials }), _jsx(Text, { children: "Encl." })] }), _jsxs(View, { children: [_jsx(Text, { children: (_l = data === null || data === void 0 ? void 0 : data.selectedInitial) === null || _l === void 0 ? void 0 : _l.name }), _jsx(Text, { children: (_m = data === null || data === void 0 ? void 0 : data.selectedInitial) === null || _m === void 0 ? void 0 : _m.title })] })] })] })] }), _jsx(DefaultFooter, {})] }) }));
    };
    return withPreview ? (_jsx(PDFViewer, { style: PDFStyles.viewer, children: renderView() })) : (renderView());
};
export default SentToLawyer;
